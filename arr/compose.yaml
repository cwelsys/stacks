services:
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${DUID}
      - PGID=${DGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDIR}/sonarr:/config
      - ${RUST}:/data
      - ${DOCKERDIR}/sonarr/custom-services.d:/custom-services.d
      - ${DOCKERDIR}/sonarr/custom-cont-init.d:/custom-cont-init.d
    restart: always
    healthcheck:
      test: ['CMD', 'curl', '--fail', 'http://127.0.0.1:8989/ping']
      interval: 30s
      retries: 10
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.rule=Host(`sonarr.cwel.sh`)
      - traefik.http.routers.sonarr.tls=true
      - traefik.http.routers.sonarr.tls.certresolver=le
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - homepage.group=Media
      - homepage.name=Sonarr
      - homepage.icon=sonarr.png
      - homepage.href=https://sonarr.cwel.sh
      - homepage.description=Series management
      - homepage.weight=0
      - homepage.widget.type=sonarr
      - homepage.widget.url=http://sonarr:8989
      - homepage.widget.key=${SONARR_API_KEY}
    networks:
      - proxy

  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=${DUID}
      - PGID=${DGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDIR}/radarr:/config
      - ${RUST}:/data
      - ${DOCKERDIR}/radarr/custom-services.d:/custom-services.d
      - ${DOCKERDIR}/radarr/custom-cont-init.d:/custom-cont-init.d
    restart: always
    healthcheck:
      test: ['CMD', 'curl', '--fail', 'http://127.0.0.1:7878/ping']
      interval: 30s
      retries: 10
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.rule=Host(`radarr.cwel.sh`)
      - traefik.http.routers.radarr.tls=true
      - traefik.http.routers.radarr.tls.certresolver=le
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - homepage.group=Media
      - homepage.name=Radarr
      - homepage.icon=radarr.png
      - homepage.href=https://radarr.cwel.sh
      - homepage.description=Movies management
      - homepage.weight=1
      - homepage.widget.type=radarr
      - homepage.widget.url=http://radarr:7878
      - homepage.widget.key=${RADARR_API_KEY}
    networks:
      - proxy

  lidarr:
    image: lscr.io/linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=${DUID}
      - PGID=${DGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDIR}/lidarr:/config
      - ${RUST}:/data
      - ${DOCKERDIR}/lidarr/custom-services.d:/custom-services.d
      - ${DOCKERDIR}/lidarr/custom-cont-init.d:/custom-cont-init.d
    restart: always
    healthcheck:
      test: ['CMD', 'curl', '--fail', 'http://127.0.0.1:8686/ping']
      interval: 30s
      retries: 10
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidarr.rule=Host(`lidarr.cwel.sh`)
      - traefik.http.routers.lidarr.tls=true
      - traefik.http.routers.lidarr.tls.certresolver=le
      - traefik.http.services.lidarr.loadbalancer.server.port=8686
      - homepage.group=Media
      - homepage.name=Lidarr
      - homepage.icon=lidarr.png
      - homepage.href=https://lidarr.cwel.sh
      - homepage.description=Music management
      - homepage.weight=2
      - homepage.widget.type=lidarr
      - homepage.widget.url=http://lidarr:8686
      - homepage.widget.key=${LIDARR_API_KEY}
    networks:
      - proxy

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${DUID}
      - PGID=${DGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDIR}/prowlarr:/config
    restart: always
    healthcheck:
      test: ['CMD', 'curl', '--fail', 'http://127.0.0.1:9696/ping']
      interval: 30s
      retries: 10
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.cwel.sh`)
      - traefik.http.routers.prowlarr.tls=true
      - traefik.http.routers.prowlarr.tls.certresolver=le
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696
      - homepage.group=Download
      - homepage.name=Prowlarr
      - homepage.icon=prowlarr.png
      - homepage.href=https://prowlarr.cwel.sh
      - homepage.description=Indexers management
      - homepage.weight=1
      - homepage.widget.type=prowlarr
      - homepage.widget.url=http://prowlarr:9696
      - homepage.widget.key=${PROWLARR_API_KEY}
    networks:
      - proxy

  flaresolverr:
    image: 21hsmw/flaresolverr:nodriver
    container_name: flaresolverr
    restart: always
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - TZ=${TZ}
    labels:
      - traefik.enable=true
      - traefik.http.routers.flaresolverr.rule=Host(`flaresolverr.cwel.sh`)
      - traefik.http.routers.flaresolverr.tls=true
      - traefik.http.routers.flaresolverr.tls.certresolver=le
      - traefik.http.services.flaresolverr.loadbalancer.server.port=8191
    networks:
      - proxy

  unpackerr:
    image: ghcr.io/unpackerr/unpackerr:latest
    container_name: unpackerr
    volumes:
      - ${TORRENT}:/data/tor
    restart: always
    user: ${DUID}:${DGID}
    environment:
      - TZ=${TZ}
      - UN_SONARR_0_URL=http://sonarr:8989/
      - UN_SONARR_0_API_KEY=${SONARR_API_KEY}
      - UN_RADARR_0_URL=http://radarr:7878/
      - UN_RADARR_0_API_KEY=${RADARR_API_KEY}
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy

  profilarr:
    image: santiagosayshey/profilarr:beta
    container_name: profilarr
    volumes:
      - ${DOCKERDIR}/profilarr:/config
    environment:
      - PUID=${DUID}
      - PGID=${DGID}
      - TZ=${TZ}
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.profilarr.rule=Host(`profilarr.cwel.sh`)
      - traefik.http.routers.profilarr.tls=true
      - traefik.http.routers.profilarr.tls.certresolver=le
      - traefik.http.services.profilarr.loadbalancer.server.port=6868
      - homepage.group=Media
      - homepage.name=profilarr
      # - homepage.icon=profilarr.png
      - homepage.href=https://profilarr.cwel.sh
      - homepage.description=Config management
      # - homepage.widget.url='http://profilarr:6868'
      - homepage.weight=6
    networks:
      - proxy

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=${DUID}
      - PGID=${DGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDIR}/overseerr/config:/app/config
    restart: unless-stopped
    ports:
      - 5055:5055
    labels:
      - traefik.enable=true
      - traefik.http.routers.overseerr.rule=Host(`overseerr.cwel.sh`)
      - traefik.http.routers.overseerr.entrypoints=websecure
      - traefik.http.routers.overseerr.tls=true
      - traefik.http.routers.overseerr.tls.certresolver=le
      - traefik.http.services.overseerr.loadbalancer.server.port=5055
      - homepage.group=Media
      - homepage.name=Overseerr
      - homepage.icon=overseerr.png
      - homepage.href=https://overseerr.cwel.sh
      - homepage.description=Requests management
      - homepage.weight=5
      - homepage.widget.type=overseerr
      - homepage.widget.url=http://overseerr:5055
      - homepage.widget.key=${OVERSEERR_API_KEY}
    networks:
      - proxy

  maintainerr:
    image: ghcr.io/jorenn92/maintainerr:latest # or jorenn92/maintainerr:latest
    container_name: maintainerr
    user: ${DUID}:${DGID}
    networks:
      - proxy
    volumes:
      - type: bind
        source: ${DOCKERDIR}/maintainerr/data
        target: /opt/data
    environment:
      - TZ=${TZ}
    #      - DEBUG=true # uncomment to enable debug logs
    #      - BASE_PATH=/maintainerr # uncomment if you're serving maintainerr from a subdirectory
    #      - UI_HOSTNAME=:: # uncomment if you want to listen on IPv6 instead (default 0.0.0.0)
    #      - UI_PORT=6247 # uncomment to change the UI port (default 6246). Useful if you're on a network where the port is already in use
    #      - API_PORT=3002 # uncomment to change the API port (default 3001). Useful if you're on a network where the port is already in use
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.maintainerr.rule=Host(`maintainerr.cwel.sh`)
      - traefik.http.routers.maintainerr.tls=true
      - traefik.http.routers.maintainerr.tls.certresolver=le
      - traefik.http.services.maintainerr.loadbalancer.server.port=6246
      - homepage.group=Media
      - homepage.name=Maintainerr
      - homepage.icon=maintainerr.png
      - homepage.href=https://maintainerr.cwel.sh
      - homepage.description=Library maintenance
      - homepage.weight=6

  doplarr:
    image: 'ghcr.io/kiranshila/doplarr:latest'
    restart: unless-stopped
    container_name: doplarr
    networks:
      - proxy
    environment:
      # - SONARR__URL=http://sonarr:8989
      # - RADARR__URL=http://radarr:7878
      # - SONARR__API=${SONARR_API_KEY}
      # - RADARR__API=${RADARR_API_KEY}
      - OVERSEERR__URL=http://overseerr:5055
      - OVERSEERR__API=${OVERSEERR_API_KEY}
      - DISCORD__TOKEN=${DOPLARR_TOKEN}

  membarr:
    image: 'yoruio/membarr:latest'
    restart: unless-stopped
    container_name: membarr
    networks:
      - proxy
    volumes:
      - ${DOCKERDIR}/membarr/:/app/app/config
    environment:
      - token=${MEMBARR_TOKEN}
  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    environment:
      - PUID=${DUID}
      - PGID=${DGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDIR}/tautulli/config:/config
    networks:
      - proxy
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.tautulli.rule=Host(`tautulli.cwel.sh`)
      - traefik.http.routers.tautulli.tls=true
      - traefik.http.routers.tautulli.tls.certresolver=le
      - traefik.http.services.tautulli.loadbalancer.server.port=8181
      - homepage.group=Media
      - homepage.name=Tautulli
      - homepage.icon=tautulli.png
      - homepage.href=https://tautulli.cwel.sh
      - homepage.description=Plex monitoring and statistics
      - homepage.weight=7
      # - homepage.widget.type=tautulli
      # - homepage.widget.url=http://tautulli:8181
      # - homepage.widget.key=${TAUTULLI_API_KEY}

  recommendarr:
    image: tannermiddleton/recommendarr:latest
    container_name: recommendarr
    environment:
      - PUID=${DUID}
      - PGID=${DGID}
      - TZ=${TZ}
      - NODE_ENV=production
      - DOCKER_ENV=false
      - PORT=3000
      - PUBLIC_URL=https://recommendarr.cwel.sh
      - FORCE_SECURE_COOKIES=true
    volumes:
      - ${DOCKERDIR}/recommendarr/data:/app/server/data
    restart: unless-stopped
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.recommendarr.rule=Host(`recommendarr.cwel.sh`)
      - traefik.http.routers.recommendarr.tls=true
      - traefik.http.routers.recommendarr.tls.certresolver=le
      - traefik.http.services.recommendarr.loadbalancer.server.port=3000
      - homepage.group=Media
      - homepage.name=Recommendarr
      # - homepage.icon=recommendarr.png
      - homepage.href=https://recommendarr.cwel.sh
      - homepage.description=Media recommendations
      - homepage.weight=8
  plextraktsync:
    image: lscr.io/linuxserver-labs/plextraktsync:latest
    container_name: plextraktsync
    restart: unless-stopped
    volumes:
      - ${DOCKERDIR}/ptraktsync/config:/app/config
    environment:
      - PUID=${DUID}
      - PGID=${DGID}
      - TZ=${TZ}


networks:
  proxy:
    external: true
