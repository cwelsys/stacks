services:
  redis:
    container_name: redis
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping | grep PONG']
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis:/data
    networks:
      - proxy
      - pbox
  server:
    container_name: authentik
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2025.2.4}
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY:?secret key required}
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_EMAIL__HOST: ${SMTPHOST}
      AUTHENTIK_EMAIL__PORT: 587
      AUTHENTIK_EMAIL__USERNAME: ${SMTPUSER}
      AUTHENTIK_EMAIL__PASSWORD: ${SMTPASS}
      AUTHENTIK_EMAIL__USE_TLS: true
      # AUTHENTIK_EMAIL__USE_SSL: true
      AUTHENTIK_EMAIL__TIMEOUT: 10
      AUTHENTIK_EMAIL__FROM: auth@cwel.sh
      AUTHENTIK_ERROR_REPORTING__ENABLED: true
    volumes:
      - ${DOCKERDIR}/auth/media:/media
      - ${DOCKERDIR}/auth/custom-templates:/templates
    networks:
      - proxy
      - pbox
    ports:
      - '${COMPOSE_PORT_HTTP:-9000}:9000'
      - '${COMPOSE_PORT_HTTPS:-9443}:9443'
    depends_on:
      redis:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.http.routers.authentik.rule=Host(`auth.${DOMAIN}`)
      - traefik.http.routers.authentik.tls=true
      - traefik.http.routers.authentik.tls.certresolver=le
      - traefik.http.services.authentik.loadbalancer.server.port=9000
      - homepage.group=Auth
      - homepage.name=Authentik
      - homepage.icon=authentik.png
      - homepage.href=https://auth.${DOMAIN}
      - homepage.description=Identity Provider
  worker:
    container_name: auth-worker
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2025.2.4}
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY:?secret key required}
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_EMAIL__HOST: ${SMTPHOST}
      AUTHENTIK_EMAIL__PORT: 587
      AUTHENTIK_EMAIL__USERNAME: ${SMTPUSER}
      AUTHENTIK_EMAIL__PASSWORD: ${SMTPASS}
      AUTHENTIK_EMAIL__USE_TLS: true
      # AUTHENTIK_EMAIL__USE_SSL: true
      AUTHENTIK_EMAIL__TIMEOUT: 10
      AUTHENTIK_EMAIL__FROM: auth@cwel.sh
      AUTHENTIK_ERROR_REPORTING__ENABLED: true
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKERDIR}/auth/media:/media
      - ${DOCKERDIR}/auth/certs:/certs
      - ${DOCKERDIR}/auth/custom-templates:/templates
    networks:
      - proxy
      - pbox
    depends_on:
      redis:
        condition: service_healthy

volumes:
  redis:
    driver: local
networks:
  proxy:
    external: true
  pbox:
    external: true
