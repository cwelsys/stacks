volumes:
  cache:

services:
  nextcloud-db:
    container_name: nextcloud-db
    image: postgres:16
    volumes:
      - ${DOCKERM}/nextcloud-db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: nextcloud
      POSTGRES_USER: nextcloud
      POSTGRES_PASSWORD: ${NC_PG_PASS}
    networks:
      - nextcloud
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "nextcloud", "-U", "nextcloud" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  nc-redis:
    container_name: nc-redis
    image: redis:7.2
    command: ["redis-server", "--requirepass", "$REDIS_PASSWORD"]
    volumes:
      - cache:/data
    networks:
      - nextcloud
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  nextcloud:
    container_name: nextcloud
    image: nextcloud:29
    volumes:
      - ${DOCKERM}/nextcloud:/var/www/html
    environment:
      TZ: ${TZ}
      POSTGRES_HOST: nextcloud-db
      DB_PORT: 5432
      POSTGRES_DB: nextcloud
      POSTGRES_USER: nextcloud
      POSTGRES_PASSWORD: ${NC_PG_PASS}
      REDIS_HOST: nc-redis
      REDIS_HOST_PORT: 6379
      REDIS_HOST_PASSWORD: ${REDIS_PASSWORD}
      NEXTCLOUD_ADMIN_USER: cwel
      NEXTCLOUD_ADMIN_PASSWORD: ${NC_ADMIN_USER_PASSWORD}
      NEXTCLOUD_TRUSTED_DOMAINS: ${NC_HOSTNAME}
      OVERWRITECLIURL: https://${NC_HOSTNAME}
      OVERWRITEPROTOCOL: https
      OVERWRITEHOST: ${NC_HOSTNAME}
      TRUSTED_PROXIES: 172.16.0.0/12 192.168.0.0/16 10.0.0.0/8 fc00::/7 fe80::/10 2001:db8::/32
    networks:
      - nextcloud
      - internal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    labels:
      - traefik.enable=true
      - traefik.http.routers.nextcloud.rule=Host(`${NC_HOSTNAME}`)
      - traefik.http.services.nextcloud.loadbalancer.server.port=80
      - traefik.http.middlewares.nextcloud-redirectregex1.redirectregex.permanent=true
      - traefik.http.middlewares.nextcloud-redirectregex1.redirectregex.regex=https?://([^/]*)/.well-known/(card|cal)dav
      - traefik.http.middlewares.nextcloud-redirectregex1.redirectregex.replacement=https://$${1}/remote.php/dav/
      - traefik.http.middlewares.nextcloud-redirectregex2.redirectregex.permanent=true
      - traefik.http.middlewares.nextcloud-redirectregex2.redirectregex.regex=https?://([^/]*)(/.well-known[^#]*)
      - traefik.http.middlewares.nextcloud-redirectregex2.redirectregex.replacement=https://$${1}/index.php$${2}
      - traefik.http.middlewares.nextcloud-securityheaders.headers.stsSeconds=15552000
      - traefik.http.middlewares.nextcloud-securityheaders.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.nextcloud-securityheaders.headers.stsPreload=true
      - traefik.docker.network=internal

    restart: unless-stopped
    depends_on:
      nextcloud-db:
        condition: service_healthy
      nc-redis:
        condition: service_healthy

  nextcloud-cron:
    container_name: nc-cron
    image: nextcloud:29
    entrypoint: /cron.sh
    volumes:
      - ${DOCKERM}/nextcloud:/var/www/html
    networks:
      - nextcloud

