services:
  traefik:
    container_name: traefike
    image: "traefik:v3.3"
    networks:
      - public
      - traefik
      - crowdsec
    depends_on:
      - traefik-external-redis
    ports:
      # - "80:80"
      # - "443:443"
      - "8080:8080"
    environment:
      CF_DNS_API_TOKEN: ${CF_DNS_API_TOKEN}
      CS_TRAEFIK_BOUNCER_KEY: ${CS_TRAEFIK_BOUNCER_KEY}
      BOUNCER_HOST: ${BOUNCER_HOST}
    volumes:
      - ${CONFIGDIR}/traefik-external/letsencrypt:/letsencrypt
      - ${CONFIGDIR}/traefik-external/certificates:/certificates
      - ${CONFIGDIR}/traefik-external/log:/var/log/traefik:rw
      - ${CONFIGDIR}/traefik-external/static:/etc/traefik:rw
      - ${CONFIGDIR}/traefik-external/dynamic:/config/dynamic:rw
      - ${CONFIGDIR}/traefik-external/ban.html:/config/ban.html:ro
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      traefik.enable: true
      traefik.http.routers.traefik-dashboard-external.rule: Host(`traefik-external.${DOMAIN}`)
      traefik.http.services.traefik-dashboard-external.loadbalancer.server.port: 8080
      kop.traefik-dashboard-external.bind.ip: "${SERVER_IP}"
      homepage.group: Monitoring
      homepage.name: Traefik (External)
      homepage.icon: https://cdn.jsdelivr.net/gh/selfhst/icons/png/traefik.png
      homepage.href: "https://traefik-external.${DOMAIN}"

  logrotate:
    container_name: logrotate-external
    image: vegardit/traefik-logrotate:latest
    network_mode: none
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw # required to send USR1 signal to Traefik after log rotation
      - ${CONFIGDIR}/traefik-external/log:/var/log/traefik:rw # folder containing access.log file
    environment:
      TZ: ${TZ}
      # all environment variables are optional and show the default values:
      LOGROTATE_LOGS: "/var/log/traefik/*.log" # log files to rotate, directory must match volume mount
      LOGROTATE_TRIGGER_INTERVAL: daily  # rotate daily, must be one of: daily, weekly, monthly, yearly
      LOGROTATE_TRIGGER_SIZE: 50M        # rotate if log file size reaches 50MB
      LOGROTATE_MAX_BACKUPS: 7          # keep 14 backup copies per rotated log file
      LOGROTATE_START_INDEX: 1           # first rotated file is called access.1.log
      LOGROTATE_FILE_MODE: 0644          # file mode of the rotated file
      LOGROTATE_FILE_USER: root          # owning user of the rotated file
      LOGROTATE_FILE_GROUP: root         # owning group of the rotated file
      CRON_SCHEDULE: "* * * * *"
      CRON_LOG_LEVEL: 8                  # see https://unix.stackexchange.com/a/414010/378036
      # command to determine the id of the container running Traefik:
      TRAEFIK_CONTAINER_ID_COMMAND: docker ps --no-trunc --quiet --filter label=org.opencontainers.image.title=Traefik

  tail-log:
    image: alpine
    container_name: tail-loge
    volumes:
      - ${CONFIGDIR}/traefik-external/log:/var/log:ro
    command: >
      sh -c "tail -F /var/log/access.log"
    network_mode: none
    restart: unless-stopped

  traefik-external-redis:
    restart: always
    image: redis:7-alpine
    container_name: traefik-external-redis
    ports:
      - "6380:6379"
    networks:
      - traefik
      - kop
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    volumes:
      - redis:/data
  cloudflare_tunnel:
    container_name: cloudflare_tunnel
    image: cloudflare/cloudflared:2025.2.0
    restart: unless-stopped
    command: tunnel run --token ${CF_TRAEFIK_TUNNEL_TOKEN}
    environment:
        TUNNEL_METRICS: 0.0.0.0:20241
    networks:
        - traefik

  logdy:
    container_name: logdy-external
    build:
      context: https://github.com/logdyhq/logdy-core.git
    read_only: true
    networks:
      - internal
    volumes:
      - ${CONFIGDIR}/traefik-external/log:/var/log:ro
      - ${CONFIGDIR}/logdy/logdy.json:/config/logdy.json
    command:
      - "--config"
      - "/config/logdy.json"
      - "follow"
      #- "--full-read"
      - "/var/log/access.log"
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
    labels:
      traefik.enable: true
      traefik.http.routers.logdy-traefik-external.rule: Host(`traefik-log-external.${DOMAIN}`)
      traefik.http.services.logdy-traefik-external.loadbalancer.server.port: 8080
      traefik.docker.network: internal
      homepage.group: Monitoring
      homepage.name: Traefik Logs (External)
      homepage.icon: https://cdn.jsdelivr.net/gh/selfhst/icons/png/logdy.png
      homepage.href: "https://traefik-log-external.${DOMAIN}"

  socket-proxy:
    image: lscr.io/linuxserver/socket-proxy:latest
    container_name: traefik-ext-socket-proxy
    networks:
      - crowdsec
    environment:
      - ALLOW_START=1 #optional
      - ALLOW_STOP=1 #optional
      - ALLOW_RESTARTS=1 #optional
      - AUTH=1 #optional
      - BUILD=1 #optional
      - COMMIT=1 #optional
      - CONFIGS=1 #optional
      - CONTAINERS=1 #optional
      - DISABLE_IPV6=1 #optional
      - DISTRIBUTION=1 #optional
      - EVENTS=1 #optional
      - EXEC=1 #optional
      - IMAGES=1 #optional
      - INFO=1 #optional
      - LOG_LEVEL=info #optional
      - NETWORKS=1 #optional
      - NODES=1 #optional
      - PING=1 #optional
      - PLUGINS=1 #optional
      - POST=1 #optional
      - SECRETS=1 #optional
      - SERVICES=1 #optional
      - SESSION=1 #optional
      - SWARM=1 #optional
      - SYSTEM=1 #optional
      - TASKS=1 #optional
      - VERSION=1 #optional
      - VOLUMES=1 #optional
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 2375:2375
    restart: always
    read_only: true
    tmpfs:
      - /run
volumes:
  redis:
