services:
  traefik:
    container_name: traefik
    image: traefik:latest
    networks:
      - pstick
    depends_on:
      - ps-redis
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      # - "8180:8080"
    environment:
      CF_DNS_API_TOKEN: ${CF_DNS_API_TOKEN}
    volumes:
      - ${DOCKERM}/traefik/letsencrypt:/letsencrypt
      - /var/log/traefik:/var/log/traefik:rw
      - ${DOCKERM}/traefik/static:/etc/traefik:rw
      - ${DOCKERM}/traefik/dynamic:/config/dynamic:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      traefik.enable: true
      traefik.http.routers.traefik-dashboard.rule: Host(`traefikp.${DOMAIN}`)
      traefik.http.routers.traefik-dashboard.service: api

  ps-logrotate:
    container_name: ps-logrotate
    image: vegardit/traefik-logrotate:latest
    network_mode: none
    restart: unless-stopped
    depends_on:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw # required to send USR1 signal to Traefik after log rotation
      - /var/log/traefik:/var/log/traefik:rw # folder containing access.log file
    environment:
      TZ: ${TZ}
      # all environment variables are optional and show the default values:
      LOGROTATE_LOGS: '/var/log/traefik/*.log' # log files to rotate, directory must match volume mount
      LOGROTATE_TRIGGER_psERVAL: daily # rotate daily, must be one of: daily, weekly, monthly, yearly
      LOGROTATE_TRIGGER_SIZE: 50M # rotate if log file size reaches 50MB
      LOGROTATE_MAX_BACKUPS: 7 # keep 14 backup copies per rotated log file
      LOGROTATE_START_INDEX: 1 # first rotated file is called access.1.log
      LOGROTATE_FILE_MODE: 0644 # file mode of the rotated file
      LOGROTATE_FILE_USER: root # owning user of the rotated file
      LOGROTATE_FILE_GROUP: root # owning group of the rotated file
      CRON_SCHEDULE: '* * * * *'
      CRON_LOG_LEVEL: 8 # see https://unix.stackexchange.com/a/414010/378036
      # command to determine the id of the container running Traefik:
      TRAEFIK_CONTAINER_ID_COMMAND: docker ps --no-trunc --quiet --filter label=org.opencontainers.image.title=Traefik

  ps-tlog:
    container_name: ps-tlog
    image: alpine
    volumes:
      - /var/log/traefik:/var/log:ro
    command: >
      sh -c "tail -F /var/log/access.log"
    network_mode: none
    depends_on:
      - traefik
    restart: unless-stopped

  ps-redis:
    restart: always
    image: redis:7-alpine
    container_name: ps-redis
    ports:
      - 6379:6379
    networks:
      - pstick
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']

networks:
  pstick:
    driver: bridge
    external: true
