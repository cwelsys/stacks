services:
  nextcloud-db:
    container_name: nextcloud-db
    image: postgres:16
    volumes:
      - ${DOCKERM}/nextcloud/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: nextcloud
      POSTGRES_USER: nextcloud
      POSTGRES_PASSWORD: ${NC_PG_PASS}
    networks:
      - nextcloud
    healthcheck:
      test: ['CMD', 'pg_isready', '-q', '-d', 'nextcloud', '-U', 'nextcloud']
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  nc-redis:
    container_name: nc-redis
    image: redis:alpine
    command: ['redis-server', '--requirepass', '${REDIS_PASSWORD}']
    networks:
      - nextcloud
      - internal
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  nextcloud:
    container_name: nextcloud
    image: nextcloud:apache
    expose:
      - 80/tcp
    ports:
      - 8288:80
    volumes:
      - ${DOCKERM}/nextcloud/app:/var/www/html
      - ${DOCKERM}/nextcloud/data:/var/www/html/data
    environment:
      TZ: ${TZ}
      POSTGRES_HOST: nextcloud-db
      DB_PORT: 5432
      POSTGRES_DB: nextcloud
      POSTGRES_USER: nextcloud
      POSTGRES_PASSWORD: ${NC_PG_PASS}
      REDIS_HOST: nc-redis
      REDIS_HOST_PORT: 6379
      REDIS_HOST_PASSWORD: ${REDIS_PASSWORD}
      NEXTCLOUD_TRUSTED_DOMAINS: cloud.cwel.sh
      NEXTCLOUD_ADMIN_USER: cwel
      NEXTCLOUD_ADMIN_PASSWORD: ${NC_ADMIN_USER_PASSWORD}
      TRUSTED_PROXIES: 172.16.0.0/12 192.168.0.0/16 192.168.4.89 10.0.0.0/8 fc00::/7 fe80::/10 2001:db8::/32
    networks:
      - nextcloud
      - internal
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:80/']
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    labels:
      - traefik.enable=true
      - traefik.docker.network=internal
      - traefik.http.routers.nextcloud.rule=Host(`cloud.${DOMAIN}`)
      - traefik.http.services.nextcloud.loadbalancer.server.port=80
      - traefik.http.services.nextcloud.loadbalancer.serverstransport=ignorecert@file
      - traefik.http.routers.nextcloud.middlewares=limit-nextcloud,nextcloud-dav
      - traefik.http.middlewares.nextcloud-dav.replacepathregex.regex=^/.well-known/ca(l|rd)dav
      - traefik.http.middlewares.nextcloud-dav.replacepathregex.replacement=/remote.php/dav/
      - traefik.http.middlewares.limit-nextcloud.buffering.maxRequestBodyBytes=50000000
      - traefik.http.middlewares.limit-nextcloud.buffering.maxResponseBodyBytes=50000000
      - traefik.http.middlewares.limit-nextcloud.buffering.memRequestBodyBytes=50000000
      - traefik.http.middlewares.limit-nextcloud.buffering.memResponseBodyBytes=50000000

    restart: unless-stopped
    depends_on:
      nextcloud-db:
        condition: service_healthy
      nc-redis:
        condition: service_healthy

  nextcloud-cron:
    container_name: nc-cron
    image: nextcloud:apache
    entrypoint: /cron.sh
    volumes:
      - ${DOCKERM}/nextcloud/app:/var/www/html
      - ${DOCKERM}/nextcloud/data:/var/www/html/data
    networks:
      - nextcloud

  protonmail-bridge:
    container_name: proton-bridge
    image: shenxn/protonmail-bridge
    networks:
      - nextcloud
    ports:
      - 1025:25/tcp
      - 1143:143/tcp
    restart: unless-stopped
    volumes:
      - ${DOCKERM}/proton-bridge:/root


  db-backup:
    container_name: nextcloud-db-backup
    image: tiredofit/db-backup
    networks:
      - nextcloud
    volumes:
      - ${DOCKERM}/dumps/nextcloud:/backup
    environment:
      - TIMEZONE=${TZ}
      - CONTAINER_NAME=nextcloud-db-backup
      - CONTAINER_ENABLE_MONITORING=FALSE
      # - DEBUG_MODE=TRUE
      - BACKUP_JOB_CONCURRENCY=1 # Only run one job at a time
      - DEFAULT_CHECKSUM=NONE # Don't create checksums
      - DEFAULT_COMPRESSION=ZSTD # Compress all with ZSTD
      - DEFAULT_BACKUP_INTERVAL=1440 # Backup every 1440 minutes
      - DEFAULT_BACKUP_BEGIN=2330 # Start backing up at 11:30
      - DEFAULT_CLEANUP_TIME=8640 # Cleanup backups after a week
      - DB01_TYPE=postgres
      - DB01_HOST=nextcloud-db
      - DB01_NAME=nextcloud
      - DB01_USER=nextcloud
      - DB01_PASS=${NC_PG_PASS}
