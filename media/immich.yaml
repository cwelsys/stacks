volumes:
  cache:

services:
  immich-server:
    image: altran1502/immich-server:${IMMICH_VERSION:-release}
    container_name: immich
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      - NODE_ENV=production
      - TZ=${TZ}
      - DB_USERNAME=immich
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=immich-redis
      - REDIS_HOSTNAME=immich-redis
      - DB_HOSTNAME=immich-db
    expose:
      - 2283
    depends_on:
      - immich-redis
      - immich-db
    restart: unless-stopped
    healthcheck:
      disable: false
    networks:
      - internal
      - stack
    labels:
     - traefik.enable=true
     - traefik.http.routers.immich.rule=Host(`immich.${DOMAIN}`)
     - traefik.http.services.immich.loadbalancer.server.port=2283
     - traefik.docker.network=internal

  immich-machine-learning:
    image: altran1502/immich-machine-learning:${IMMICH_VERSION:-release}
    container_name: immich-ml
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - cache:/cache
    environment:
      - NODE_ENV=production
      - TZ=${TZ}
      - DB_DATABASE_NAME=immich
      - DB_USERNAME=immich
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=immich-redis
      - REDIS_HOSTNAME=immich-redis  # Added this line
      - DB_HOSTNAME=immich-db
    restart: unless-stopped
    healthcheck:
      disable: false
    networks:
      - internal
      - stack

  immich-redis:
    image: docker.io/valkey/valkey:8-bookworm
    container_name: immich-redis
    restart: unless-stopped
    healthcheck:
      test: redis-cli ping || exit 1
    networks:
      - stack

  immich-db:
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
    container_name: immich-db
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ${DOCKERDB}/immich-db:/var/lib/postgresql/data
    command: >-
      postgres -c shared_preload_libraries=vectors.so -c 'search_path="$$user", public, vectors' -c logging_collector=on -c max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on
    restart: unless-stopped
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1; Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    networks:
      - stack

  db-backup:
    container_name: immich-db-backup
    image: tiredofit/db-backup
    networks:
      - stack
    volumes:
      - ${BRICK}/db/immich:/backup
      #- ./post-script.sh:/assets/custom-scripts/post-script.sh
    environment:
      - TIMEZONE=${TZ}
      - CONTAINER_NAME=immich-db-backup
      - CONTAINER_ENABLE_MONITORING=FALSE
      # - DEBUG_MODE=TRUE

      - BACKUP_JOB_CONCURRENCY=1     # Only run one job at a time
      - DEFAULT_CHECKSUM=NONE        # Don't create checksums
      - DEFAULT_COMPRESSION=ZSTD     # Compress all with ZSTD
      - DEFAULT_BACKUP_INTERVAL=1440   # Backup every 1440 minutes
      - DEFAULT_BACKUP_BEGIN=0000      # Start backing up at midnight
      - DEFAULT_CLEANUP_TIME=8640    # Cleanup backups after a week

      - DB01_TYPE=postgres
      - DB01_HOST=immich-db
      - DB01_NAME=${DB_DATABASE_NAME}
      - DB01_USER=${DB_USERNAME}
      - DB01_PASS=${DB_PASSWORD}
      # - DB01_BACKUP_INTERVAL=60         # (override) Backup every 60 minutes
      - DB01_BACKUP_BEGIN=+1           # (override) Backup starts in ten minutes
      # - DB01_CLEANUP_TIME=240         # (override) Cleanup backups they are older than 240 minutes
      # - DB01_CHECKSUM=MD5             # (override) Create a SHA1 checksum
      # - DB01_COMPRESSION=BZ           # (override) Compress with BZIP

