services:
  qbittorrent:
    image: ghcr.io/hotio/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - WEBUI_PORTS=8080/tcp,8080/udp
    volumes:
      - ${DOCKERM}/qbit:/config
      - ${RUST}/tor:/data/tor
      - ${RUST}/game:/game
      - ${DOCKERM}/qbit/vuetorrent:/vuetorrent
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -sf https://api.ipify.org || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    network_mode: service:gluetun
    depends_on:
      - gluetun
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    restart: unless-stopped
    networks:
      - internal
      - media
      - default
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    # ports:
    #   - 8082:8080
    #   - 8000:8000
    volumes:
      - ${DOCKERM}/gluetun/config.toml:/gluetun/auth/config.toml:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.qbittorrent.rule=Host(`qbit.${CASA}`)
      - traefik.docker.network=internal
      - traefik.http.services.qbittorrent.loadbalancer.server.port=8080
    environment:
      VPN_SERVICE_PROVIDER: protonvpn
      VPN_TYPE: wireguard
      VPN_PORT_FORWARDING: on
      WIREGUARD_PRIVATE_KEY: ${WIREGUARD_PRIVATE_KEY}
      WIREGUARD_ADDRESSES: "10.2.0.2/32"
      GLUETUN_HTTP_CONTROL_SERVER_ENABLE: on

  qsticky:
    image: ghcr.io/monstermuffin/qsticky:latest
    container_name: qsticky
    restart: unless-stopped
    networks:
      - default
    environment:
      # qBittorrent settings
      QBITTORRENT_HOST: gluetun
      QBITTORRENT_HTTPS: false
      QBITTORRENT_PORT: 8080
      QBITTORRENT_USER: ${QBIT_USERNAME}
      QBITTORRENT_PASS: ${QBIT_PASSWORD}

      # Gluetun control server
      GLUETUN_HOST: gluetun
      GLUETUN_PORT: 8000
      GLUETUN_AUTH_TYPE: apikey
      GLUETUN_APIKEY: ${GLUETUN_APIKEY}

      # qSticky poll rate/logs
      CHECK_INTERVAL: 30
      LOG_LEVEL: INFO

    healthcheck:
      test:
        [
          "CMD",
          "python3",
          "-c",
          "import json; exit(0 if json.load(open('/app/health/status.json'))['healthy'] else 1)",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  qbit_manage:
    container_name: qbit_manage
    image: ghcr.io/stuffanthings/qbit_manage:latest
    networks:
      - internal
      - media
    volumes:
      - ${DOCKERM}/qbit_manage:/config:rw
      - ${RUST}/tor:/data/tor:rw
      - ${DOCKERM}/qbit:/qbittorrent:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.qbitmanage.rule=Host(`qbm.${CASA}`)
      - traefik.docker.network=internal
      - traefik.http.services.qbitmanage.loadbalancer.server.port=8027
    environment:
      - TZ=${TZ}
      - PUID=1000
      - PGID=1000
      - QBT_WEB_SERVER=true
      - QBT_PORT=8027
    restart: unless-stopped
