services:
    sonarr:
        image: lscr.io/linuxserver/sonarr:latest
        container_name: sonarr
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=${TZ}
            - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:sonarr
            - TP_COMMUNITY_THEME=true
            - TP_THEME=catppuccin-mocha
        volumes:
            - ${DOCKERM}/sonarr/app:/config
            - ${RUST}:/data
        restart: always
        healthcheck:
            test: [ "CMD", "curl", "--fail", "http://127.0.0.1:8989/ping" ]
            interval: 30s
            retries: 10
        labels:
            - traefik.enable=true
            - traefik.http.routers.sonarr.rule=Host(`sonarr.${CASA}`)
            - traefik.docker.network=internal
            - traefik.http.services.sonarr.loadbalancer.server.port=8989
        networks:
            - internal
            - media

    radarr:
        image: lscr.io/linuxserver/radarr
        container_name: radarr
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=${TZ}
            - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:radarr
            - TP_COMMUNITY_THEME=true
            - TP_THEME=catppuccin-mocha
        volumes:
            - ${DOCKERM}/radarr/app:/config
            - ${RUST}:/data
        restart: always
        healthcheck:
            test: [ "CMD", "curl", "--fail", "http://127.0.0.1:7878/ping" ]
            interval: 30s
            retries: 10
        labels:
            - traefik.enable=true
            - traefik.http.routers.radarr.rule=Host(`radarr.${CASA}`)
            - traefik.docker.network=internal
            - traefik.http.services.radarr.loadbalancer.server.port=7878
        networks:
            - internal
            - media

    readarr:
        image: ghcr.io/pennydreadful/bookshelf:hardcover
        container_name: readarr
        environment:
            - PUID=1000
            - PGID=1001
            - TZ=${TZ}
        volumes:
            - ${DOCKERM}/readarr:/config
            - ${RUST}:/data
        restart: unless-stopped
        networks:
            - media
            - internal
        labels:
            - traefik.enable=true
            - traefik.docker.network=internal
            - traefik.http.routers.readarr.rule=Host(`readarr.${CASA}`)
            - traefik.http.services.readarr.loadbalancer.server.port=8787

    # lidarr:
    #   image: lscr.io/linuxserver/lidarr
    #   container_name: lidarr
    #   environment:
    #     - PUID=1000
    #     - PGID=1000
    #     - TZ=${TZ}
    #     - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:lidarr
    #     - TP_COMMUNITY_THEME=true
    #     - TP_THEME=catppuccin-mocha
    #   volumes:
    #     - ${DOCKERM}/lidarr/app:/config
    #     - ${RUST}:/data
    #   restart: always
    #   healthcheck:
    #     test: ['CMD', 'curl', '--fail', 'http://127.0.0.1:8686/ping']
    #     interval: 30s
    #     retries: 10
    #   labels:
    #     - traefik.enable=true
    #     - traefik.http.routers.lidarr.rule=Host(`lidarr.${CASA}`)
    #     - traefik.docker.network=internal
    #     - traefik.http.services.lidarr.loadbalancer.server.port=8686
    #   networks:
    #     - internal
    #     - media

    whisparr:
        container_name: whisparr
        image: ghcr.io/hotio/whisparr:v3
        restart: unless-stopped
        networks:
            - internal
            - media
        environment:
            - PUID=1000
            - PGID=1000
            - UMASK=002
            - TZ=${TZ}
            - TP_HOTIO=true
            - TP_COMMUNITY_THEME=true
            - TP_THEME=catppuccin-mocha
        volumes:
            - ${DOCKERM}/whisparr:/config
            - ${DOCKERM}/whisparr/98-themepark /98-themepark-whisparr:/etc/cont-init.d/98-themepark
            - ${RUST}:/data
        labels:
            - traefik.enable=true
            - traefik.docker.network=internal
            - traefik.http.routers.whisparr.rule=Host(`whisparr.${CASA}`)
            - traefik.http.services.whisparr.loadbalancer.server.port=6969

    prowlarr:
        image: lscr.io/linuxserver/prowlarr:latest
        container_name: prowlarr
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=${TZ}
            - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:prowlarr
            - TP_COMMUNITY_THEME=true
            - TP_THEME=catppuccin-mocha
        volumes:
            - ${DOCKERM}/prowlarr:/config
        restart: always
        healthcheck:
            test: [ "CMD", "curl", "--fail", "http://127.0.0.1:9696/ping" ]
            interval: 30s
            retries: 10
        labels:
            - traefik.enable=true
            - traefik.http.routers.prowlarr.rule=Host(`prowlarr.${CASA}`)
            - traefik.docker.network=internal
            - traefik.http.services.prowlarr.loadbalancer.server.port=9696
        networks:
            - internal
            - media

    jellyseerr:
        image: ghcr.io/hotio/jellyseerr
        container_name: jellyseerr
        restart: always
        environment:
            - TZ=${TZ}
            - PUID=1000
            - PGID=1000
            - UMASK=002
        networks:
            - public
            - media
        ports:
            - "5055:5055"
        volumes:
            - ${DOCKERM}/jellyseerr:/config
        labels:
            - traefik.enable=true
            - traefik.http.routers.jellyseerr.rule=Host(`req.${DOMAIN}`)
            - traefik.docker.network=public
            - traefik.http.services.jellyseerr.loadbalancer.server.port=5055
            - kop.namespace=public

    flaresolverr:
        image: 21hsmw/flaresolverr:nodriver
        container_name: flaresolverr
        restart: always
        environment:
            - LOG_LEVEL=info
            - LOG_HTML=false
            - CAPTCHA_SOLVER=none
            - TZ=${TZ}
        labels:
            - traefik.enable=true
            - traefik.http.routers.flaresolverr.rule=Host(`flaresolverr.${CASA}`)
            - traefik.docker.network=internal
            - traefik.http.services.flaresolverr.loadbalancer.server.port=8191
        networks:
            - internal

    recyclarr:
        image: ghcr.io/recyclarr/recyclarr
        container_name: recyclarr
        user: 1000:1000
        networks:
            - media
        volumes:
            - ${DOCKERM}/recyclarr:/config
        environment:
            - TZ=${TZ}

    cleanuparr:
        image: ghcr.io/cleanuparr/cleanuparr:latest
        container_name: cleanarr
        restart: unless-stopped
        networks:
            - internal
            - media
        # ports:
        #   - '11011:11011'
        volumes:
            - ${DOCKERM}/cleanarr:/config
        environment:
            - PORT=11011
            - PUID=1000
            - PGID=1000
            - UMASK=022
            - TZ=${TZ}
        labels:
            - traefik.enable=true
            - traefik.http.routers.cleanuparr.rule=Host(`cleanarr.${CASA}`)
            - traefik.docker.network=internal
            - traefik.http.services.cleanuparr.loadbalancer.server.port=11011

    unpackerr:
        image: ghcr.io/unpackerr/unpackerr:latest
        container_name: unpackerr
        volumes:
            - ${RUST}/tor:/data/tor
        restart: always
        user: 1000:1000
        environment:
            - TZ=${TZ}
            - UN_DEBUG=true
            - UN_SONARR_0_URL=http://sonarr:8989/
            - UN_SONARR_0_API_KEY=${SONARR_API_KEY}
            - UN_RADARR_0_URL=http://radarr:7878/
            - UN_RADARR_0_API_KEY=${RADARR_API_KEY}
        networks:
            - media

    # bazarr:
    #     image: lscr.io/linuxserver/bazarr:latest
    #     container_name: bazarr
    #     networks:
    #         - internal
    #         - media
    #     environment:
    #         - PUID=1000
    #         - PGID=1000
    #         - TZ=${TZ}
    #         - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:bazarr
    #         - TP_COMMUNITY_THEME=true
    #         - TP_THEME=catppuccin-mocha
    #     volumes:
    #         - ${DOCKERM}/bazarr:/config
    #         - ${RUST}/movie:/movies
    #         - ${RUST}/tv:/tv
    #         - ${RUST}/anime:/anime
    #     restart: unless-stopped
    #     labels:
    #         - traefik.enable=true
    #         - traefik.http.routers.bazarr.rule=Host(`bazarr.${CASA}`)
    #         - traefik.http.services.bazarr.loadbalancer.server.port=6767
    #         - traefik.docker.network=internal

    # maintainerr:
    #   image: ghcr.io/jorenn92/maintainerr:latest # or jorenn92/maintainerr:latest
    #   container_name: maintainerr
    #   user: 1000:1000
    #   networks:
    #     - internal
    #     - media
    #   volumes:
    #     - ${DOCKERM}/maintainerr:/opt/data
    #   environment:
    #     - TZ=${TZ}
    #   restart: unless-stopped
    #   labels:
    #     - traefik.enable=true
    #     - traefik.http.routers.maintainerr.rule=Host(`maintainerr.${CASA}`)
    #     - traefik.docker.network=internal
    #     - traefik.http.services.maintainerr.loadbalancer.server.port=6246
