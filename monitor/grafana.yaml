services:
  loki:
    image: grafana/loki:2.9.11
    container_name: loki
    networks:
      - monitor
    user: 1000:1000
    command: -config.file=/etc/loki/config.yml
    restart: unless-stopped
    expose:
      - 3100
    ports:
      - '127.0.0.1:3100:3100'
    volumes:
      - ${DOCKERM}/loki:/etc/loki

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    networks:
      - monitor
    restart: unless-stopped
    command: -config.file=/etc/promtail/config.yml
    expose:
      - 9080
    depends_on:
      - loki
    volumes:
      - /var/log:/var/log:ro
      - ${DOCKERM}/promtail:/etc/promtail

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    user: 1000:1000
    depends_on:
      # - influxdb
      - loki
      - promtail
    restart: unless-stopped
    networks:
      - internal
      - monitor
    environment:
      - GF_SERVER_ROOT_URL=https://grafana.${DOMAIN}
    expose:
      - 3000
    volumes:
      - ${DOCKERM}/grafana:/var/lib/grafana
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN}`)
      - traefik.http.services.grafana.loadbalancer.server.port=3000
      - traefik.docker.network=internal

  victoriametrics:
    image: victoriametrics/victoria-metrics:v1.115.0
    container_name: victoriametrics
    restart: unless-stopped
    networks:
      - monitor
      - crowdsec
      - internal
    expose:
      - 8428
    volumes:
      - ${DOCKERM}/vmetrics:/storage
    command:
      - '--storageDataPath=/storage'
      - '--httpListenAddr=:8428'

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    environment:
      - TZ=${TZ}
    volumes:
      - ${DOCKERM}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.size=100GB'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - monitor
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  nodeexporter:
    image: prom/node-exporter:latest
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    network_mode: host

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    environment:
      - TZ=${TZ}
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    command:
      - '--housekeeping_interval=15s'
      - '--docker_only=true'
    restart: unless-stopped
    networks:
      - monitor

  # influxdb:
  #   image: influxdb:2.7
  #   container_name: influxdb2
  #   restart: unless-stopped
  #   networks:
  #     - monitor
  #   expose:
  #     - 8086
  #   environment:
  #     - DOCKER_INFLUXDB_INIT_USERNAME=admin
  #     - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASS}
  #     - DOCKER_INFLUXDB_INIT_ORG=influx-org
  #     - DOCKER_INFLUXDB_INIT_BUCKET=influx-bucket
  #     - DOCKER_INFLUXDB_INIT_RETENTION=30d
  #     - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
  #     - DOCKER_INFLUXDB_INIT_MODE=setup
  #   volumes:
  #     - ${DOCKERM}/influxdb:/var/lib/influxdb2
  #     - ${DOCKERM}/influxdb-cfg:/etc/influxdb2

volumes:
  prometheus:
    name: prometheus
