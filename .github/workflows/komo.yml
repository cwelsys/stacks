name: Create GitHub Webhooks
on:
  workflow_dispatch:

jobs:
  create-webhooks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get stack names
        id: get_stacks
        run: |
          # Find directories that contain compose.yaml files
          STACKS=$(find . -maxdepth 2 -name "compose.yaml" | sed -e 's|./||' -e 's|/compose.yaml||' | grep -v "^\." | sort | tr '\n' ',' | sed 's/,$//')
          echo "STACK_NAMES=$STACKS" >> $GITHUB_OUTPUT
          echo "Found stacks: $STACKS"

      - name: Debug STACK_NAMES
        run: echo "STACK_NAMES=${{ steps.get_stacks.outputs.STACK_NAMES }}"

      - name: Create GitHub Webhooks
        run: |
          for STACK_NAME in ${STACK_NAMES//,/ }; do
            # Check if webhook already exists
            WEBHOOK_EXISTS=$(curl -s -H "Authorization: token ${{ secrets.WEBHOOK_PAT }}" \
              "https://api.github.com/repos/${{ github.repository }}/hooks" | \
              jq -r --arg url "https://komo.cwel.sh/listener/github/stack/$STACK_NAME/deploy" \
              '.[] | select(.config.url==$url) | "exists"')

            if [ "$WEBHOOK_EXISTS" = "exists" ]; then
              echo "Webhook for stack $STACK_NAME already exists, skipping..."
              continue
            fi

            echo "Creating webhook for stack $STACK_NAME..."
            echo "{\n  \"name\": \"web\",\n  \"active\": true,\n  \"events\": [\"push\"],\n  \"config\": {\n    \"url\": \"https://komo.cwel.sh/listener/github/stack/$STACK_NAME/deploy\",\n    \"content_type\": \"json\",\n    \"secret\": \"${{ secrets.KOMODO_WEBHOOK_SECRET }}\"\n  }\n}" > webhook.json

            RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
              -H "Authorization: token ${{ secrets.WEBHOOK_PAT }}" \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Content-Type: application/json" \
              "https://api.github.com/repos/${{ github.repository }}/hooks" \
              -d @webhook.json)

            # Extract status code and response body
            HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
            RESPONSE_BODY=$(echo "$RESPONSE" | sed '$ d')

            if [ "$HTTP_STATUS" -ne 201 ]; then
              echo "Failed to create webhook for stack $STACK_NAME. Status: $HTTP_STATUS"
              echo "Response: $RESPONSE_BODY"
              exit 1
            else
              echo "Successfully created webhook for stack $STACK_NAME"
            fi
          done
        env:
          STACK_NAMES: '${{ steps.get_stacks.outputs.STACK_NAMES }}'
