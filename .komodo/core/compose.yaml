volumes:
  repo-cache:
    external: true
services:
  mongo:
    image: mongo
    container_name: komo-mongo
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    command: --quiet --wiredTigerCacheSizeGB 0.25
    restart: unless-stopped
    networks:
      - stack
    logging:
      driver: ${COMPOSE_LOGGING_DRIVER:-local}
    # ports:
    #   - 27017:27017
    volumes:
      - ${DOCKERM:-./}/komodo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${KOMODO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${KOMODO_DB_PASSWORD}
  core:
    image: ghcr.io/moghtech/komodo-core:latest
    container_name: komodo
    labels:
      - komodo.skip
      - traefik.enable=true
      - traefik.http.routers.komodo.rule=Host(`komo.${DOMAIN}`)
      - traefik.http.routers.komodo.service=komodo
      - traefik.http.services.komodo.loadbalancer.server.port=9120
      - traefik.docker.network=public
      - kop.namespace=public
    restart: unless-stopped
    networks:
      - public
      - stack
    depends_on:
      - mongo
    logging:
      driver: ${COMPOSE_LOGGING_DRIVER:-local}
    ports:
      - 9120:9120
    env_file: ./.env
    environment:
      KOMODO_DATABASE_ADDRESS: mongo:27017
      KOMODO_DATABASE_USERNAME: ${KOMODO_DB_USERNAME}
      KOMODO_DATABASE_PASSWORD: ${KOMODO_DB_PASSWORD}
    volumes:
      - ./core.config.toml:/config/config.toml
      - ${COMPOSE_KOMODO_BACKUPS_PATH}:/backups
    # extra_hosts:
    #   - host.docker.internal:host-gateway

  periphery:
    container_name: komo-p1
    image: ghcr.io/moghtech/komodo-periphery:latest
    networks:
      - public
      - stack
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    logging:
      driver: ${COMPOSE_LOGGING_DRIVER:-local}
    env_file: ./.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc:/proc
      - ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}:${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}

networks:
  internal:
    external: true
  public:
    external: true
  stack:
    internal: true
