services:
  ferretdb:
    image: ghcr.io/ferretdb/ferretdb:1
    container_name: ferretdb
    labels:
      komodo.skip: 'true' # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    logging:
      driver: ${COMPOSE_LOGGING_DRIVER:-local}
    networks:
      - pbox
    # ports:
    #   - 27017:27017
    environment:
      - FERRETDB_POSTGRESQL_URL=postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/komodo

  core:
    image: ghcr.io/moghtech/komodo-core:1.17.0
    container_name: komodo
    labels:
      - "komodo.skip" # Prevent Komodo from stopping with StopAllContainers
      - "traefik.enable=true"
      - "traefik.http.routers.komodo.rule=Host(`komo.cwel.sh`)"
      - "traefik.http.routers.komodo.service=komodo"
      - "traefik.http.routers.komodo.entrypoints=websecure"
      - "traefik.http.routers.komodo.tls=true"
      - "traefik.http.services.komodo.loadbalancer.server.port=9120"
      - "traefik.http.services.komodo.loadbalancer.server.scheme=http"

      - homepage.name=Komodo
      - homepage.icon=komodo.png
      - homepage.group=System
      - homepage.description=Docker ops
      - homepage.href=http://pbox:9120
      - homepage.statusStyle=dot
    restart: unless-stopped
    depends_on:
      - ferretdb
    networks:
      - pbox
      - proxy # Add proxy network to connect with Traefik
    ports:
      - 9120:9120
    environment:
      COMPOSE_LOGGING_DRIVER: local # Enable log rotation with local driver
      # Database
      KOMODO_DATABASE_URI: mongodb://postgres:${POSTGRES_PASSWORD}@ferretdb:27017/${KOMODO_DATABASE_DB_NAME:-komodo}?authMechanism=PLAIN&tls=false

      # Core Configuration
      KOMODO_LOCAL_AUTH: 'true'
      KOMODO_ENABLE_NEW_USERS: 'false'
      KOMODO_HOST: https://komo.cwel.sh
      KOMODO_TITLE: Komodo
      KOMODO_DISABLE_CONFIRM_DIALOG: 'true'

      # Monitoring Intervals
      KOMODO_MONITORING_INTERVAL: '15-sec'
      KOMODO_RESOURCE_POLL_INTERVAL: '5-min'

    volumes:
      ## Core cache for repos for latest commit hash / contents
      - repo-cache:/repo-cache
      ## Store sync files on server
      # - /path/to/syncs:/syncs
      ## Optionally mount a custom core.config.toml
      # - ./core.toml:/config/config.toml
    extra_hosts:
      - host.docker.internal:host-gateway

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=komodo
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - pbox

volumes:
  postgres-data:
  repo-cache:
networks:
  pbox:
    external: true
    name: 'pbox'
  proxy:
    external: true
