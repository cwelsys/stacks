services:
  server:
    container_name: broadcastarr
    image: docker.io/billos/broadcastarr:latest
    command: "start:server"
    networks:
      - media
      - internal
      - stack
    volumes:
      - ${DOCKERM}/bcast/streams/m3u8:/bcast/streams/m3u8:rw
      - ${DOCKERM}/bcast/streams/images:/bcast/streams/images:rw
    labels:
      - traefik.enable=true
      - traefik.http.routers.broadcastarr.rule=Host(`bcast.${CASA}`)
      - traefik.docker.network=internal
      - traefik.http.services.broadcastarr.loadbalancer.server.port=3000
    environment:
      NODE_ENV: development
      MONGO_URL: mongodb://mongo
      MONGO_AGENDA_DB: agenda
      MONGO_DB: broadcastarr
      UID: 1000
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      LOG_DATA: ${LOG_DATA:-true}
      PORT: 3000
      M3U8_FOLDER: ${DOCKERM}/bcast/streams/m3u8
      IMAGES_FOLDER: ${DOCKERM}/bcast/streams/images
      TZ: ${TZ}
      # USER_AGENT: ${USER_AGENT}
      BROADCASTARR_REMOTE_URL: https://bcast.${CASA}
      JELLYFIN_URL: http://jellyfin:8096
      JELLYFIN_TOKEN: ${JELLYFIN_API_KEY}
      DISCORD_BOT_ACTIVE: true
      DISCORD_BOT_TOKEN: ${BROADCASTARR_TOKEN}
      DISCORD_BOT_CLIENT_ID: ${BROADCASTARR_ID}
      MATRIX_ADDITIONAL_ADMINS: ${MATRIX_ADDITIONAL_ADMINS:-}
    deploy:
      resources:
        limits:
          memory: 4g
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy

  worker:
    extends:
      service: server
    container_name: worker
    command: "start:worker"

  mongo:
    image: docker.io/library/mongo:7.0
    container_name: mongo
    restart: unless-stopped
    networks:
      - stack
    volumes:
      - broadcastarr_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongo/test --quiet
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  broadcastarr_data:
    external: true
